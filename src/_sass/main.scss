@charset "utf-8";

/*

// TODO: each 

/////////////
thing
/////////////

is to be extracted to its own file


*/




// import bulma variables
@import "../../node_modules/bulma/sass/utilities/initial-variables";

/////////////////////////////////////////////////////////////

// edit bulma variables here

/////////////////////////////////////////////////////////////

// import custom libraries of variables
@import "./octostyling";


$primary               : #D49E11;
// $input-background-color: transparent;

$card-radius: 0.5rem;
$card-shadow: $shadow-border;


// import rest of bulma
@import "../..//node_modules/bulma/bulma";


/////////////////////////////////////////////////////////////

// bulma modifiers

/////////////////////////////////////////////////////////////

.force-center{
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}

// prettier switches from checkboxes
// TODO: add function here to create modifiers from bulma colors. is- and is-hollow
label.checkbox {
  user-select: none;
  input {
    display: none;
  }
  .checkbox-switch {
    @include animate;

    display: inline-flex;
    vertical-align: middle;
    align-items: center;
    margin-left: 0.5rem;
    width: 2em;
    height: 1em;
    border: 1px solid $grey-light;
    border-radius: $radius;
    position: relative;
    background: $grey-light;

    &:after {
      position: absolute;
      @include animate;
      content: "";
      display: flex;
      height: 0.75em;
      width: 0.75em;
      background: $white-ter;
      margin: 0 0.125em;
      border-radius: $radius;
      left: 0;
    }
  }

  input:checked + .checkbox-switch {
    border-color: $primary;
    background: $primary;

    &:after {
      left: calc(1em - 0.125em);
    }
  }
}

/////////////////////////////////////////////////////////////

// body

/////////////////////////////////////////////////////////////

.navbar {
  box-shadow: $shadow-1;
}


/////////////////////////////////////////////////////////////

// library

/////////////////////////////////////////////////////////////

// downloaded filter level header thing
.header.level {
  padding: 1rem;
}

// set library as a grid
.gameList {
  display: grid;
  grid-template-columns: repeat(auto-fill, 15rem);
  grid-gap: 1rem;
  padding: 2rem 4rem;

  // animate gameCard to grow on hover, and trigger all other other hover shenanigans
  .gameCard {
    @include animate;
    @include hover-grow;
    position: relative;

    &:hover {
      box-shadow: $shadow-5;

      .gameInfo {
        opacity: 1;
      }

      .glanceStatus {
        opacity: 0;
        pointer-events: none;
      }
    }

    // float and animate the game info
    .gameInfo {
      @include animate;

      position: absolute;
      bottom: 0;
      opacity: 0;
      background: $dark-transparent;
      color: $white-bis;
      width: 100%;

      i {
        position: absolute;
        bottom: 0.5rem;
        right: 0.5rem;
        cursor: pointer;
      }
    }

    // set up card content to not grow if game name is long
    .card-content {
      padding: 0;
      height: 5rem;
      display: flex;

      > span {
        padding: 1rem 3rem 1rem 1rem;
        width: 100%;
      }
    }

    // setting up the download icon to always show for easy visibility
    .glanceStatus{
      @include animate;

      position: absolute;
      bottom: 0rem;
      right: 0rem;
      padding: 1.5rem;

      background: $dark-transparent;
      border-radius: 1.5rem 0 0 0;
    }
  }
}